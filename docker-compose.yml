version: '3.8'

networks:
  hie:
    driver: bridge

services:

  ###
  # Traefik Reverse Proxy
  ###
  traefik:
    image: traefik:v2.8.3
    container_name: traefik
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./configs/traefik/traefik.yml:/etc/traefik/traefik.yml
      - ./configs/traefik/certs.yml:/etc/traefik/dynamic_conf/certs.yml
      - ./configs/traefik/certs:/etc/certs
    labels:
      - 'traefik.enable=true'
      - 'traefik.docker.network=ci-hie-demo_hie'
      - 'traefik.http.routers.api.rule=Host(`tap-demo.openelisci.org`) && PathPrefix(`/api`) || PathPrefix(`/dashboard`)'
      - 'traefik.http.routers.api.service=api@internal'
      - 'traefik.http.routers.api.tls=true'
      - 'traefik.http.routers.api.entrypoints=web-secure'
    networks:
      - hie
  sigdep3:
    image: partnersinhealth/openmrs-server:latest
    depends_on:
      sigdep-db:
        condition: service_healthy
    container_name: sigdep3
    hostname: sigdep3
    environment:
      OMRS_CONFIG_CONNECTION_SERVER: "sigdep-db"
      OMRS_CONFIG_CONNECTION_ROOT_PASSWORD: "root"
      OMRS_CONFIG_CONNECTION_USERNAME: "root"
      OMRS_CONFIG_CONNECTION_PASSWORD: "root"
      OMRS_CONFIG_CONNECTION_EXTRA_ARGS: "&autoReconnect=true&sessionVariables=default_storage_engine%3DInnoDB&useUnicode=true&characterEncoding=UTF-8&useSSL=false&requireSSL=false"
      OMRS_CONFIG_AUTO_UPDATE_DATABASE: "false"
      OMRS_CONFIG_CREATE_TABLES: "false"
      OMRS_CONFIG_HAS_CURRENT_OPENMRS_DATABASE: "true"
      OMRS_DEV_DEBUG_PORT: "1044"
    volumes:
      - ./configs/sigdep3/distribution:/openmrs/distribution
      - /openmrs/data
    ports:
      - "8090:8080"
      - "1044:1044"
    labels:
      - 'traefik.enable=true'
      - 'traefik.docker.network=ci-hie-demo_hie'
      
      - 'traefik.http.services.sigdep3.loadbalancer.server.port=8080'
      - 'traefik.http.services.sigdep3.loadbalancer.server.scheme=http'
      - 'traefik.http.routers.sigdep3.service=sigdep3'
      - 'traefik.http.routers.sigdep3.tls=true'
      - 'traefik.http.routers.sigdep3.entrypoints=web-secure'
      - 'traefik.http.routers.sigdep3.rule=Host(`tap-demo.openelisci.org`) && PathPrefix(`/openmrs`)'
    networks: 
      - hie
  sigdep-db:
    image: library/mysql:5.6
    hostname: sigdep-db
    container_name: sigdep-db
    command: "mysqld \
              --character-set-server=utf8 \
              --collation-server=utf8_general_ci \
              --max_allowed_packet=1G \
              --default-authentication-plugin=mysql_native_password \
              --sql_mode=STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION"
    environment:
      MYSQL_DATABASE: "openmrs"
      MYSQL_ROOT_PASSWORD: "root"
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
      timeout: 20s
      retries: 10
    volumes:
      - ./configs/sigdep3/db:/docker-entrypoint-initdb.d
      - mysql-data:/var/lib/mysql
    ports:
      - "3306:3306"
    networks:
      - hie

  ###
  # OpenHIM
  ###
  openhim-core:
    container_name: openhim-core
    hostname: openhim-core
    image: jembi/openhim-core:latest
    restart: unless-stopped
    environment:
      mongo_url: "mongodb://mongo-db/openhim"
      mongo_atnaUrl: "mongodb://mongo-db/openhim"
      NODE_ENV: "development"
    healthcheck:
      test: "node /healthcheck.js"
      interval: 20s
      timeout: 20s
      retries: 2
    networks:
      - hie
    volumes:
      - ./configs/openhim/healthcheck.js:/healthcheck.js
    labels:
      - 'traefik.enable=true'
      - 'traefik.docker.network=ci-hie-demo_hie'

      - 'traefik.http.services.openhim-api.loadbalancer.server.port=8080'
      - 'traefik.http.services.openhim-api.loadbalancer.server.scheme=https'
      - 'traefik.http.routers.openhim-api.service=openhim-api'
      - 'traefik.http.routers.openhim-api.tls=true'
      - 'traefik.http.routers.openhim-api.entrypoints=web-secure'
      - 'traefik.http.routers.openhim-api.rule=Host(`tap-demo.openelisci.org`) && PathPrefix(`/openhim-api`)'
      - 'traefik.http.routers.openhim-api.middlewares=openhim-api'
      - 'traefik.http.middlewares.openhim-api.stripprefix.prefixes=/openhim-api'
      - 'traefik.http.middlewares.openhim-api.stripprefix.forceSlash=false'

      - 'traefik.http.services.openhim-http.loadbalancer.server.port=5000'
      - 'traefik.http.services.openhim-http.loadbalancer.server.scheme=https'
      - 'traefik.http.routers.openhim-http.service=openhim-http'
      - 'traefik.http.routers.openhim-http.tls=true'
      - 'traefik.http.routers.openhim-http.entrypoints=web-secure'
      - 'traefik.http.routers.openhim-http.rule=Host(`tap-demo.openelisci.org`) && PathPrefix(`/openhim-http`)'
      - 'traefik.http.routers.openhim-http.middlewares=openhim-http'
      - 'traefik.http.middlewares.openhim-http.stripprefix.prefixes=/openhim-http'
      - 'traefik.http.middlewares.openhim-http.stripprefix.forceSlash=false'

      - 'traefik.http.services.openhim-ssl.loadbalancer.server.port=5001'
      - 'traefik.http.services.openhim-ssl.loadbalancer.server.scheme=http'
      - 'traefik.http.routers.openhim-ssl.service=openhim-ssl'
      - 'traefik.http.routers.openhim-ssl.tls=true'
      - 'traefik.http.routers.openhim-ssl.entrypoints=web-secure'
      - 'traefik.http.routers.openhim-ssl.rule=Host(`tap-demo.openelisci.org`) && PathPrefix(`/openhim-ssl`)'
      - 'traefik.http.routers.openhim-ssl.middlewares=openhim-ssl'
      - 'traefik.http.middlewares.openhim-ssl.stripprefix.prefixes=/openhim-ssl'
      - 'traefik.http.middlewares.openhim-ssl.stripprefix.forceSlash=false'

  openhim-console:
    container_name: openhim-console
    hostname: openhim-console
    image: jembi/openhim-console:latest
    restart: unless-stopped
    volumes:
      - ./configs/openhim-console/default.json:/usr/share/nginx/html/config/default.json
    healthcheck:
      test: "curl -sS http://openhim-console || exit 1"
      interval: 10s
      timeout: 60s
      retries: 3
    labels:
      - 'traefik.enable=true'
      - 'traefik.docker.network=ci-hie-demo_hie'
      - 'traefik.http.routers.openhim-console.tls=true'
      - 'traefik.http.routers.openhim-console.entrypoints=web-secure'
      - 'traefik.http.routers.openhim-console.rule=Host(`tap-demo.openelisci.org`) && PathPrefix(`/openhim`)'
      - 'traefik.http.routers.openhim-console.middlewares=openhim-console'
      - 'traefik.http.middlewares.openhim-console.stripprefix.prefixes=/openhim'
      - 'traefik.http.middlewares.openhim-console.stripprefix.forceSlash=false'
    networks:
      - hie

  # Loads Default OpenHIM Config
  openhim-config:
    container_name: openhim-config
    image: ghcr.io/i-tech-uw/openhim-config:v0.0.0
    volumes:
      - ./configs/openhim/test-openhim-config.json:/app/test-openhim-config.json
    networks:
      - hie

  mongo-db:
    container_name: mongo-db
    image: mongo:3.4
    volumes:
      - /data/db
    restart: unless-stopped
    networks:
      - hie
  
  ###
  # OpenCR - Client Registry
  ###
  opencr:
    container_name: opencr
    hostname: opencr
    image: intrahealth/opencr:latest
    restart: unless-stopped
    environment:
      - NODE_ENV=docker
      - HAPI_FHIR_URL=http://opencr-fhir:8080/fhir/metadata
    networks:
      - hie
    volumes:
      - ./configs/opencr/config.json:/src/server/config/config_docker.json
      - ./configs/opencr/mediator.json:/src/server/config/mediator.json
      - ./configs/opencr/decisionRules.json:/src/server/config/decisionRules.json
      - ./configs/opencr/PatientRelationship.json:/src/resources/Relationships/PatientRelationship.json
    labels:
      - 'traefik.enable=true'
      - 'traefik.docker.network=ci-hie-demo_hie'
      - 'traefik.http.routers.opencr.tls=true'
      - 'traefik.http.routers.opencr.entrypoints=web-secure'
      - 'traefik.http.services.opencr.loadbalancer.server.port=3000'
      - 'traefik.http.routers.opencr.rule=Host(`tap-demo.openelisci.org`)'
    ports:
      - 3000:3000
  opencr-fhir:
    image: hapiproject/hapi:v5.1.0
    container_name: opencr-fhir
    hostname: opencr-fhir
    restart: unless-stopped
    networks:
      - hie
    healthcheck:
      test: "curl -sS http://opencr-fhir:8080/fhir/metadata || exit 1"
      interval: 90s
      timeout: 30s
      retries: 3
    volumes:
      - /data/hapi
    #   - ./configs/opencr/application.yml:/data/hapi/application.yaml
    ports:
      - 8081:8080
    # env_file:
    #   - ./configs/opencr/.env
    # environment:
    #   SPRING_CONFIG_LOCATION: 'file:///data/hapi/application.yaml'

  es:
    container_name: es
    hostname: es
    image: intrahealth/elasticsearch:latest
    restart: unless-stopped
    environment:
      - node.name=es01
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms1024m -Xmx1024m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - /usr/share/elasticsearch/data
    networks:
      - hie
    healthcheck:
      test: "curl --silent --fail http://es:9200/_cluster/health || exit 1"
  
  ###
  # Utility for waiting for Sigdep3 Bootup
  ###
  wait-for-openmrs:
    profiles: ['utility']
    container_name: wait-for-openmrs
    image: ghcr.io/i-tech-uw/wait-for-openmrs-action:latest 
    command:
    - "http://sigdep3:8080/openmrs"
    - "20" 
    - "10000"
    networks:
    - hie

  ###
  # Testing
  ###
  newman:
    image: postman/newman
    container_name: newman
    profiles: [test]
    volumes:
      - ./.postman:/.postman
    entrypoint: newman run $POSTMAN_COLLECTION -e /.postman/ci.postman_environment.json --insecure --timeout-request 20000 --delay-request 500
    networks:
      - hie

volumes:
  openmrs-data:
  mysql-data:      
