version: '3.8'


services:

  sigdep3:
    image: partnersinhealth/openmrs-server:latest
    restart: unless-stopped
    depends_on:
      sigdep-db:
        condition: service_healthy
    container_name: sigdep3
    hostname: sigdep3
    environment:
      OMRS_CONFIG_CONNECTION_SERVER: "sigdep-db"
      OMRS_CONFIG_CONNECTION_ROOT_PASSWORD: "root"
      OMRS_CONFIG_CONNECTION_USERNAME: "root"
      OMRS_CONFIG_CONNECTION_PASSWORD: "root"
      OMRS_CONFIG_CONNECTION_EXTRA_ARGS: "&autoReconnect=true&sessionVariables=default_storage_engine%3DInnoDB&useUnicode=true&characterEncoding=UTF-8&useSSL=false&requireSSL=false"
      OMRS_CONFIG_AUTO_UPDATE_DATABASE: "false"
      OMRS_CONFIG_CREATE_TABLES: "false"
      OMRS_CONFIG_HAS_CURRENT_OPENMRS_DATABASE: "true"
      OMRS_DEV_DEBUG_PORT: "1044"
    volumes:
      - ./configs/sigdep3/distribution:/openmrs/distribution
      - .data/sigdep3:/openmrs/data
    ports:
      - "8090:8080"
      - "1044:1044"
  sigdep-db:
    image: library/mysql:5.6
    restart: unless-stopped    
    hostname: sigdep-db
    container_name: sigdep-db
    command: "mysqld \
              --character-set-server=utf8 \
              --collation-server=utf8_general_ci \
              --max_allowed_packet=1G \
              --default-authentication-plugin=mysql_native_password \
              --sql_mode=STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION"
    environment:
      MYSQL_DATABASE: "openmrs"
      MYSQL_ROOT_PASSWORD: "root"
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
      timeout: 20s
      retries: 10
    volumes:
      - ./configs/sigdep3/init-db:/docker-entrypoint-initdb.d
      - .db/sigdep3:/var/lib/mysql
    ports:
      - "3306:3306"

  ###
  # OpenHIM
  ###
  openhim-core:
    container_name: openhim-core
    hostname: openhim-core
    image: jembi/openhim-core:latest
    restart: unless-stopped
    environment:
      mongo_url: "mongodb://mongo-db/openhim"
      mongo_atnaUrl: "mongodb://mongo-db/openhim"
      NODE_ENV: "development"
    healthcheck:
      test: "node /healthcheck.js"
      interval: 20s
      timeout: 20s
      retries: 2
    volumes:
      - ./configs/openhim/healthcheck.js:/healthcheck.js
    ports:
      - "8085:8080"
      - "5000:5000"
      - "5001:5001"

  openhim-console:
    container_name: openhim-console
    hostname: openhim-console
    image: jembi/openhim-console:latest
    restart: unless-stopped
    volumes:
      - ./configs/openhim-console/default-local.json:/usr/share/nginx/html/config/default.json
    healthcheck:
      test: "curl -sS http://openhim-console || exit 1"
      interval: 10s
      timeout: 60s
      retries: 3
    ports:
      - "9000:80"

  # Loads Default OpenHIM Config
  openhim-config:
    container_name: openhim-config
    image: ghcr.io/i-tech-uw/openhim-config:v0.0.0
    volumes:
      - ./configs/openhim/test-openhim-config.json:/app/test-openhim-config.json

  mongo-db:
    container_name: mongo-db
    image: mongo:3.4
    volumes:
      - .db/openhim:/data/db
    restart: unless-stopped
  
  ###
  # OpenCR - Client Registry
  ###
  opencr:
    container_name: opencr
    hostname: opencr
    image: intrahealth/opencr:bac5a14
    restart: unless-stopped
    environment:
      - NODE_ENV=docker
      - HAPI_FHIR_URL=http://opencr-fhir:8080/fhir/metadata
    volumes:
      - ./configs/opencr/config.json:/src/server/config/config_docker.json
      - ./configs/opencr/mediator.json:/src/server/config/mediator.json
      - ./configs/opencr/decisionRules.json:/src/server/config/decisionRules.json
      - ./configs/opencr/PatientRelationship.json:/src/resources/Relationships/PatientRelationship.json
    ports:
      - 3000:3000

  opencr-fhir:
    image: hapiproject/hapi:v5.1.0
    container_name: opencr-fhir
    hostname: opencr-fhir
    restart: unless-stopped
    healthcheck:
      test: "curl -sS http://opencr-fhir:8080/fhir/metadata || exit 1"
      interval: 90s
      timeout: 30s
      retries: 3
    volumes:
      - /data/hapi
    #   - ./configs/opencr/application.yml:/data/hapi/application.yaml
    ports:
      - 8081:8080
    # env_file:
    #   - ./configs/opencr/.env
    # environment:
    #   SPRING_CONFIG_LOCATION: 'file:///data/hapi/application.yaml'

  es:
    container_name: es
    hostname: es
    image: intrahealth/elasticsearch:latest
    restart: unless-stopped
    environment:
      - node.name=es01
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms1024m -Xmx1024m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - /usr/share/elasticsearch/data
    healthcheck:
      test: "curl --silent --fail http://es:9200/_cluster/health || exit 1"
  

volumes:
  certs: ~
  letsencrypt: ~